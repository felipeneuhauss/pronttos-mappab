{"version":3,"sources":["../../src/pages/exam-clinic-search/exam-clinic-search.module.ts","../../src/components/fake/fake.module.ts","../../src/components/fake/fake.ts","../../src/components/fake/card-fake.ts","../../src/pages/exam-clinic-search/exam-clinic-search.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ExamClinicSearchPage } from './exam-clinic-search';\nimport { FakeModule } from '../../components/fake/fake.module';\n\n@NgModule({\n  declarations: [\n    ExamClinicSearchPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ExamClinicSearchPage), FakeModule\n  ],\n})\nexport class ExamClinicSearchPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/exam-clinic-search/exam-clinic-search.module.ts","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { FakeComponent } from \"./fake\";\nimport { CardFakeComponent } from \"./card-fake\";\n\n@NgModule({\n  declarations: [FakeComponent, CardFakeComponent],\n  imports: [IonicModule],\n  exports: [FakeComponent, CardFakeComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class FakeModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/fake/fake.module.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'fake',\n  templateUrl: 'fake.html'\n})\nexport class FakeComponent {\n\n  @Input() quantity: number = 15;\n\n  public fakeItems: Array<any> = new Array(15);\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/fake/fake.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'card-fake',\n  templateUrl: 'card-fake.html'\n})\nexport class CardFakeComponent {\n\n  public fakeItems: Array<any> = new Array(7);\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/fake/card-fake.ts","import { Component } from '@angular/core';\nimport {\n  ActionSheetController,\n  IonicPage,\n  ModalController,\n  NavController,\n  NavParams,\n  ViewController\n} from 'ionic-angular';\nimport { ExamTypesProvider } from '../../providers/exam-types/exam-types';\nimport { ExamTypeMapper } from '../../models/exam-type.model';\nimport { ToastProvider } from '../../providers/toast/toast';\n\n/**\n * Generated class for the ExamClinicSearchPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage({\n  name: 'ExamClinicSearchPage'\n})\n@Component({\n  selector: 'page-exam-clinic-search',\n  templateUrl: 'exam-clinic-search.html',\n})\nexport class ExamClinicSearchPage {\n\n  searching: boolean = false;\n\n  examName: string;\n\n  currentItems: ExamTypeMapper[] = [];\n\n  clinicExamSelected: any[] = [];\n\n  page: number = 0;\n\n  q: string = '';\n\n  type: string = 'lab';\n\n  constructor(public navCtrl: NavController, private viewCtrl: ViewController,  public navParams: NavParams,\n              private toastPrv: ToastProvider, private actionSheetCtrl: ActionSheetController,\n              public examTypesPrv: ExamTypesProvider, public modalCtrl: ModalController) {\n    this.clinicExamSelected = this.navParams.get('clinicExamSelected');\n  }\n\n  ionViewDidLoad() {\n    this.getItems();\n  }\n\n  onCancel() {\n    this.page = 0;\n    this.q = '';\n    this.getItems();\n  }\n\n  getExams(ev: any) {\n    const val = ev.target.value;\n\n    if (val === '') {\n      this.q = '';\n      this.page = 0;\n      this.getItems({page: this.page, q: this.q});\n      return;\n    }\n\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '' && val.length > 3) {\n      this.q = val;\n      this.page = 0;\n      this.getItems({page: this.page, q: this.q, type: this.type});\n    }\n  }\n\n  getItems(params?: any) {\n    this.searching = true;\n    return new Promise((resolve) => {\n      this.examTypesPrv.query(params).subscribe((data: ExamTypeMapper[]) => {\n        this.searching = false;\n        if (params && params.q) {\n          this.currentItems = data;\n          resolve();\n          return;\n        }\n        this.currentItems = this.currentItems.concat(data);\n        resolve();\n      }, (err) => {\n        console.error(err)\n        this.searching = false;\n      });\n    });\n  }\n\n  openClinicOptions(exam: ExamTypeMapper) {\n    if (this.clinicExamSelected.length === 5) {\n      this.toastPrv.show('No máximo 5 exames já foram adicionados. Remova algum exame para continuar.', 3500);\n      return;\n    }\n\n    let options = [];\n    for (let clinic of exam.clinics) {\n      options.push({\n        text: clinic.name,\n        handler: () => {\n          this.addClinicAndExam(clinic, exam)\n        }\n      })\n    }\n\n    let actionSheet = this.actionSheetCtrl.create({\n      title: 'Escolha uma clínica para o exame',\n      buttons: options\n    });\n\n    actionSheet.present();\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss({ clinicExamSelected: this.clinicExamSelected });\n  }\n\n  addClinicAndExam(clinic: any, exam: any) {\n    this.clinicExamSelected.push({clinic: clinic, exam: exam});\n    console.log('this.clinicExamSelected.length', this.clinicExamSelected.length);\n    if (this.clinicExamSelected.length === 5) {\n      this.toastPrv.show('No máximo 5 exames já foram adicionados.', 3500);\n      this.dismiss();\n    }\n  }\n\n  removeClinicExamSelected(index: number) {\n    this.clinicExamSelected.splice(index, 1);\n  }\n\n  doInfinite(infiniteScroll) {\n    return new Promise((resolve) => {\n      console.log('doInfinite');\n      this.page++;\n\n      this.getItems({page: this.page, type: this.type, q: this.q}).then(() => {\n        resolve();\n        infiniteScroll.complete();\n      });\n    });\n  }\n\n  filterByExamType($event) {\n    console.log('$event', $event);\n    this.currentItems = [];\n    this.getItems({page: this.page, q: this.q, type: this.type});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/exam-clinic-search/exam-clinic-search.ts"],"sourceRoot":""}