{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"36.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, LoadingController, NavController, ToastController } from 'ionic-angular';\n\nimport { User } from '../../providers';\nimport { MainPage } from '../';\nimport { Storage } from '@ionic/storage';\nimport { AnalytictsTrack } from '../../decorators/analyticts-track.decorators';\n\n@AnalytictsTrack('[LOGIN] Tela de login')\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without username, make\n  // sure to add it to the type\n  account: { username: string, password: string } = {\n    username: '',\n    password: ''\n  };\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User, private storage: Storage,\n    public toastCtrl: ToastController,\n    private loadingCtrl: LoadingController,\n    public translateService: TranslateService) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    });\n\n    this.initForm();\n  }\n\n  async initForm() {\n    this.account.username = await this.storage.get('email');\n    console.log('this.account.username', this.account.username);\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n    let loading = this.loadingCtrl.create({\n      content: 'Por favor aguarde...'\n    });\n\n    loading.present();\n\n    this.user.login(this.account).then((resp) => {\n      loading.dismiss();\n      this.storage.set('email', this.account.username);\n      this.navCtrl.setRoot(MainPage);\n    }, (err) => {\n      loading.dismiss();\n      // this.navCtrl.push(Login);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}